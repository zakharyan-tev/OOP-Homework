#include <iostream>
#include <array>

class Matrix3x3 {
private:
    std::array<std::array<int, 3>, 3> data;

public:
    Matrix3x3(int a11, int a12, int a13,
              int a21, int a22, int a23,
              int a31, int a32, int a33) 
    {
        data = {{{a11, a12, a13},
                 {a21, a22, a23},
                 {a31, a32, a33}}};
    }

    int getElement(size_t row, size_t col) const {
        return data[row][col];
    }

    void setElement(size_t row, size_t col, int value) {
        data[row][col] = value;
    }

    void transpose() {
        for (size_t i = 0; i < 3; ++i) {
            for (size_t j = i + 1; j < 3; ++j) {
                std::swap(data[i][j], data[j][i]);
            }
        }
    }

    void print() const {
        for (const auto& row : data) {
            for (const auto& elem : row) {
                std::cout << elem << " ";
            }
            std::cout << std::endl;
        }
    }

    std::array<int, 3>& operator[](size_t row) {
        return data[row];
    }

    const std::array<int, 3>& operator[](size_t row) const {
        return data[row];
    }
};

int main() {
    Matrix3x3 matrix(1, 2, 3,
                     4, 5, 6,
                     7, 8, 9);

    std::cout << "Matrix:" << std::endl;
    matrix.print();

    matrix.transpose();
    std::cout << "Transposed:" << std::endl;
    matrix.print();

    std::cout << "Element [1][2]: " << matrix[1][2] << std::endl;

    matrix[1][2] = 42;
    std::cout << "After changing [1][2]:" << std::endl;
    matrix.print();

    return 0;
}
