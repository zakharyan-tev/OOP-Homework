#include <iostream>
#include <array>

template <typename T, std::size_t Rows, std::size_t Cols, typename Func>
std::array<std::array<T, Cols>, Rows> process2DArray(
    const std::array<std::array<T, Cols>, Rows>& input, Func f)
{
    std::array<std::array<T, Cols>, Rows> result{};

    for (std::size_t i = 0; i < Rows; ++i) {
        for (std::size_t j = 0; j < Cols; ++j) {
            result[i][j] = f(input[i][j]);
        }
    }

    return result;
}

int myDouble(int x) {
    return x * 2;
}

int main() {
    std::array<std::array<int, 3>, 3> matrix = {{
        {{1, 2, 3}},
        {{4, 5, 6}},
        {{7, 8, 9}}
    }};

    auto doubled = process2DArray(matrix, myDouble);

    for (const auto& row : doubled) {
        for (const auto& elem : row) {
            std::cout << elem << " ";
        }
        std::cout << "\n";
    }
}
